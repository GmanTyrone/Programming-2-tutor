#include <bits/stdc++.h>

using namespace std ;

class HTMLElementWithAttributes : public HTMLElement
{

    public :
        HTMLElementWithAttributes(string str) : HTMLElement(str)
        {
            string key ;
            string value ;
            bool valueFinish = 0 ;
            bool quotation = 0 ;
            for(int i = 1 + tagName.size() ; str[i] != '>' ; i++)
            {
                if(str[i] == '"' && !quotation)
                {
                    quotation = 1 ;
                    continue ;
                }
                if(str[i] == '"' && quotation) valueFinish = 1 ;
                if(str[i] != '=' && !quotation) key += str[i] ;
                if(str[i] != '"' && quotation && !valueFinish) value += str[i] ;
                if(valueFinish && quotation)
                {
                    attributes.insert({key, value}) ;
                    valueFinish = 0 ;
                    quotation = 0 ;
                    key = "" ;
                    value = "" ;
                }
            }
        }
        list<string> getAttributes()
        {
            list<string> l = {} ;
            for(auto x : attributes)
            {
                l.push_back(x.first) ;
            }
            return l ;
        }
        string operator[](string key) { return attributes[key] ; }
    private:
        map<string, string> attributes ;
};

int main()
{
    string str ;
    getline(cin,str) ;
    HTMLElementWithAttributes html(str) ;
    cout << html.getTagName() << endl ;
    list<string> key = html.getAttributes() ;
    for(string k : key)
    {
        cout << html[k] << endl ;
    }
    return 0 ;
}